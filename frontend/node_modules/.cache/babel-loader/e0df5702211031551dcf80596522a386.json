{"ast":null,"code":"const NoteReducer = (state, action) => {\n  let draftNotes = [...state];\n\n  switch (action.type) {\n    case \"getAllNotesSuccess\":\n      return action.payload;\n\n    case \"createNoteSuccess\":\n      draftNotes.unshift(action.payload);\n      return draftNotes;\n\n    case \"updateNoteSuccess\":\n      let index = state.findIndex(item => item._id === action.id);\n      draftNotes[index] = { ...draftNotes[index],\n        ...action.payload\n      };\n      return draftNotes;\n\n    case \"archiveNoteSuccess\":\n      return draftNotes.filter(item => item._id !== action.id);\n\n    case \"deleteNoteSuccess\":\n      return draftNotes.filter(item => item._id !== action.id);\n\n    default:\n      return state;\n  }\n};\n\n_c = NoteReducer;\nexport default NoteReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteReducer\");","map":{"version":3,"sources":["/Users/younis/Desktop/KeepNotes/client/src/reducer/noteReducer.js"],"names":["NoteReducer","state","action","draftNotes","type","payload","unshift","index","findIndex","item","_id","id","filter"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIC,UAAU,GAAG,CAAC,GAAGF,KAAJ,CAAjB;;AAEA,UAAQC,MAAM,CAACE,IAAf;AACE,SAAK,oBAAL;AACE,aAAOF,MAAM,CAACG,OAAd;;AACF,SAAK,mBAAL;AACEF,MAAAA,UAAU,CAACG,OAAX,CAAmBJ,MAAM,CAACG,OAA1B;AACA,aAAOF,UAAP;;AACF,SAAK,mBAAL;AACE,UAAII,KAAK,GAAGN,KAAK,CAACO,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACS,EAA9C,CAAZ;AACAR,MAAAA,UAAU,CAACI,KAAD,CAAV,GAAoB,EAAE,GAAGJ,UAAU,CAACI,KAAD,CAAf;AAAwB,WAAGL,MAAM,CAACG;AAAlC,OAApB;AACA,aAAOF,UAAP;;AACF,SAAK,oBAAL;AACE,aAAOA,UAAU,CAACS,MAAX,CAAmBH,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACS,EAAhD,CAAP;;AACF,SAAK,mBAAL;AACE,aAAOR,UAAU,CAACS,MAAX,CAAmBH,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACS,EAAhD,CAAP;;AACF;AACE,aAAOV,KAAP;AAfJ;AAiBD,CApBD;;KAAMD,W;AAsBN,eAAeA,WAAf","sourcesContent":["const NoteReducer = (state, action) => {\n  let draftNotes = [...state];\n  \n  switch (action.type) {\n    case \"getAllNotesSuccess\":\n      return action.payload;\n    case \"createNoteSuccess\":\n      draftNotes.unshift(action.payload);\n      return draftNotes;\n    case \"updateNoteSuccess\":\n      let index = state.findIndex((item) => item._id === action.id);\n      draftNotes[index] = { ...draftNotes[index], ...action.payload };\n      return draftNotes;\n    case \"archiveNoteSuccess\":\n      return draftNotes.filter((item) => item._id !== action.id);\n    case \"deleteNoteSuccess\":\n      return draftNotes.filter((item) => item._id !== action.id);\n    default:\n      return state;\n  }\n};\n\nexport default NoteReducer;\n"]},"metadata":{},"sourceType":"module"}