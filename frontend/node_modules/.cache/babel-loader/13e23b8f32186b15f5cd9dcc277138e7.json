{"ast":null,"code":"var _jsxFileName = \"/Users/younis/Desktop/KeepNotes/client/src/components/NotesList/NotesList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport \"./NotesList.scss\";\nimport { useRouteMatch, useHistory, NavLink } from \"react-router-dom\";\nimport { BASE_URL, GET_ALL_NOTES, GET_TRASH_NOTES } from \"../../utils/apiEndpoints\";\nimport { getRequest } from \"../../utils/apiRequest\";\nimport { NotesContext } from \"../../context/contex\";\nimport { listFormatDate } from \"../../utils/hekpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteList = props => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const notesContext = useContext(NotesContext);\n  const {\n    title\n  } = props;\n  const match = useRouteMatch();\n  const history = useHistory();\n  useEffect(() => {\n    getNotes();\n    console.log(match);\n  }, [match.url]);\n\n  const getNotes = async () => {\n    let endpoint = \"\";\n\n    if (match.url == \"/all-notes\") {\n      endpoint = GET_ALL_NOTES;\n    } else if (match.url == \"/trash\") {\n      endpoint = GET_TRASH_NOTES;\n    } else {\n      return;\n    }\n\n    const response = await getRequest(`${BASE_URL}${endpoint}`);\n\n    if (response.error) {\n      setError(response.error);\n      return false;\n    }\n\n    notesContext.notesDispatch({\n      type: \"getAllNotesSuccess\",\n      payload: response\n    });\n\n    if (response.length > 0) {\n      history.push({\n        pathname: `${match.url}/${response[0]._id}`,\n        note: response[0]\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-list__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-list__header-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-list__header-sub-head\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-count\",\n          children: notesContext.notesState.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-list__body\",\n      children: [notesContext.notesState.length > 0, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-card__head\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-card__title\",\n            children: \"Note One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-card__desc\",\n            children: \"Some description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-card__date\",\n          children: \"31/04/2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-card__head\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-card__title\",\n            children: \"Note One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-card__desc\",\n            children: \"Some description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-card__date\",\n          children: \"31/04/2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoteList, \"ozsrpmzXcjfZQp7/xz7cEZf5EIQ=\", false, function () {\n  return [useRouteMatch, useHistory];\n});\n\n_c = NoteList;\nexport default NoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"sources":["/Users/younis/Desktop/KeepNotes/client/src/components/NotesList/NotesList.jsx"],"names":["React","useEffect","useState","useContext","useRouteMatch","useHistory","NavLink","BASE_URL","GET_ALL_NOTES","GET_TRASH_NOTES","getRequest","NotesContext","listFormatDate","NoteList","props","error","setError","notesContext","title","match","history","getNotes","console","log","url","endpoint","response","notesDispatch","type","payload","length","push","pathname","_id","note","notesState"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport \"./NotesList.scss\";\nimport { useRouteMatch, useHistory, NavLink } from \"react-router-dom\";\nimport {\n  BASE_URL,\n  GET_ALL_NOTES,\n  GET_TRASH_NOTES,\n} from \"../../utils/apiEndpoints\";\nimport { getRequest } from \"../../utils/apiRequest\";\nimport { NotesContext } from \"../../context/contex\";\nimport { listFormatDate } from \"../../utils/hekpers\";\n\nconst NoteList = (props) => {\n  const [error, setError] = useState(null);\n  const notesContext = useContext(NotesContext);\n  const { title } = props;\n  const match = useRouteMatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    getNotes();\n    console.log(match);\n  }, [match.url]);\n\n  const getNotes = async () => {\n    let endpoint = \"\";\n\n    if (match.url == \"/all-notes\") {\n      endpoint = GET_ALL_NOTES;\n    } else if (match.url == \"/trash\") {\n      endpoint = GET_TRASH_NOTES;\n    } else {\n      return;\n    }\n\n    const response = await getRequest(`${BASE_URL}${endpoint}`);\n    if (response.error) {\n      setError(response.error);\n      return false;\n    }\n\n    notesContext.notesDispatch({\n      type: \"getAllNotesSuccess\",\n      payload: response,\n    });\n    if (response.length > 0) {\n      history.push({\n        pathname: `${match.url}/${response[0]._id}`,\n        note: response[0],\n      });\n    }\n  };\n\n  return (\n    <div className=\"note-list\">\n      <div className=\"note-list__header\">\n        <div className=\"note-list__header-title\">\n          <h1>{title}</h1>\n        </div>\n        <div className=\"note-list__header-sub-head\">\n          <div className=\"note-count\">{notesContext.notesState.length}</div>\n        </div>\n      </div>\n\n      {/* body */}\n      <div className=\"note-list__body\">\n        {\n          notesContext.notesState.length > 0 \n        }\n        <div className=\"note-card\">\n          <div className=\"note-card__head\">\n            <div className=\"note-card__title\">Note One</div>\n            <div className=\"note-card__desc\">Some description</div>\n          </div>\n          <div className=\"note-card__date\">31/04/2021</div>\n        </div>\n        <div className=\"note-card\">\n          <div className=\"note-card__head\">\n            <div className=\"note-card__title\">Note One</div>\n            <div className=\"note-card__desc\">Some description</div>\n          </div>\n          <div className=\"note-card__date\">31/04/2021</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoteList;\n"]},"metadata":{},"sourceType":"module"}